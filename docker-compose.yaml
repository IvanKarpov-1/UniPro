# version: '3'

services:

  unipro.postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: UniPro
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminPswd123!!!
    ports:
      - "5432:5432"
    volumes:
      - datafiles:/var/lib/postgresql/data
    networks:
      - unipro_network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'admin', '-d', 'UniPro']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  unipro.supertokens-core:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    depends_on:
      unipro.postgres:
        condition: service_healthy
    environment:
      # LOG_LEVEL: DEBUG
      API_KEYS: aZNk6R3yv9525DiT9AmJQszYfj6ctiFb
      POSTGRESQL_TABLE_NAMES_PREFIX: st
      POSTGRESQL_CONNECTION_URI: postgresql://admin:adminPswd123!!!@unipro.postgres:5432/UniPro
    ports:
      - "3567:3567"
    networks:
      - unipro_network
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  unipro.supertokens-init:
    image: curlimages/curl:latest
    depends_on:
      unipro.supertokens-core:
        condition: service_healthy
    networks:
      - unipro_network
    entrypoint: >
      sh -c '
        echo "Waiting for SuperTokens Core...";
        curl --location --request POST "http://unipro.supertokens-core:3567/recipe/dashboard/user" \
          --header "rid: dashboard" \
          --header "api-key: aZNk6R3yv9525DiT9AmJQszYfj6ctiFb" \
          --header "Content-Type: application/json" \
          --data-raw "{\"email\": \"admin@admin.com\", \"password\": \"adminPswd123!!!\"}";
        echo "SuperTokens setup complete!";
      '

  unipro.supertokens-node:
    build:
      context: ./unipro.supertokens
      dockerfile: Dockerfile
    depends_on:
      - unipro.supertokens-init
    environment:
      NODE_ENV: production
      APP_API_PORT: 3001
      APP_API_URL: http://unipro.supertokens-node
      APP_WEBSITE_PORT: 80
      APP_WEBSITE_URL: http://unipro.nginx-reverse-proxy
      SUPERTOKENS_CORE: http://unipro.supertokens-core:3567
      SUPERTOKENS_API_KEY: aZNk6R3yv9525DiT9AmJQszYfj6ctiFb
      POSTGRES_CONNECTION_STRING: postgresql://admin:adminPswd123!!!@unipro.postgres:5432/UniPro
    ports:
      - "3001:3001"
    networks:
      - unipro_network
    restart: unless-stopped

  unipro.aspnetcore:
    build:
      context: ./UniPro.AspNetCore
      dockerfile: Dockerfile
    depends_on:
      - unipro.supertokens-init
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 5001
      CorsOrigins__: http://unipro.nginx-reverse-proxy
      Jwt__Domain: unipro.supertokens-node
      Jwt__Audience: htpp://unipro.aspnetcore
      Jwt__RsaPublicKeyPath: /run/secrets/jwt_pub_key
      ConnectionStrings__DefaultConnection: Host=unipro.postgres;Port=5432;Database=UniPro;Username=admin;Password=adminPswd123!!!;
    ports:
      - "5001:5001"
    networks:
      - unipro_network
    secrets:
      - jwt_pub_key
    restart: unless-stopped

  unipro.nginx-reverse-proxy:
    image: nginx:latest
    depends_on:
      - unipro.supertokens-node
      - unipro.aspnetcore
    ports:
      - "80:80"
    networks:
      - unipro_network
    volumes:
      - ./UniPro.ReverseProxy/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped

networks:
  unipro_network:
    driver: bridge

volumes:
  datafiles:

secrets:
  jwt_pub_key:
    file: ./secrets/jwt_pub_key.txt